{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \"Invalid username and/or password!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(authService, route, router) {\n    this.authService = authService;\n    this.route = route;\n    this.router = router;\n    this.signInForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n    this.isValid = true;\n    this.isAdmin = false;\n    this.currentUsername = '';\n    this.username = this.signInForm.get('username');\n  }\n  onSignIn() {\n    this.authService.login(this.signInForm.value);\n    this.isValid = this.authService.getIsLoggedIn();\n    if (this.isValid) {\n      this.router.navigate([\"/movies\"]);\n      this.currentUsername = this.authService.currentUser;\n    }\n    if (this.authService.getIsAdmin()) {\n      this.isAdmin = this.authService.getIsAdmin();\n    }\n    console.log(this.authService.login(this.signInForm.value));\n    console.log(this.signInForm.value);\n    console.log(this.authService.getIsLoggedIn());\n    console.log(this.authService.getIsAdmin());\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"box\", \"btn\", \"btn-primary\", \"mb-3\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"float-end\"], [1, \"container\", \"messagebottom\"], [\"href\", \"/sign-up-form\"], [1, \"alert\", \"alert-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Please login to get acces.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSignIn();\n        });\n        i0.ɵɵtemplate(5, LoginComponent_div_5_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 10);\n        i0.ɵɵtext(15, \"Sign In\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(16, \"div\", 11);\n        i0.ɵɵtext(17, \"You don't have an account? Please \");\n        i0.ɵɵelementStart(18, \"a\", 12);\n        i0.ɵɵtext(19, \"Sign Up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \" for free.\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.signInForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isValid);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%]{\\r\\n  margin: auto;\\r\\n  text-align: center;\\r\\n  margin-top:30px;\\r\\n}\\r\\n.box[_ngcontent-%COMP%]{\\r\\n  margin: auto;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxZQUFZO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xyXG4gIG1hcmdpbjogYXV0bztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDozMHB4O1xyXG59XHJcbi5ib3h7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICI/DC,+BAAiD;IAAAA,iDAAiC;IAAAA,iBAAM;;;ADK5F,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,WAAuB,EACjCC,KAAoB,EACpBC,MAAa;IAFH,gBAAW,GAAXF,WAAW;IACrB,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IAChB,eAAU,GAAC,IAAIP,SAAS,CAAC;MACvBQ,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAACE,UAAU,CAACQ,QAAQ,CAAC;MACjDC,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACQ,QAAQ;KAClD,CAAC;IAEF,YAAO,GAAC,IAAI;IACZ,YAAO,GAAC,KAAK;IACb,oBAAe,GAAQ,EAAE;IAiBvB,aAAQ,GAAE,IAAI,CAACE,UAAU,CAACC,GAAG,CAAC,UAAU,CAAC;EAzBlB;EASzBC,QAAQ;IACN,IAAI,CAACR,WAAW,CAACS,KAAK,CAAC,IAAI,CAACH,UAAU,CAACI,KAAK,CAAC;IAC7C,IAAI,CAACC,OAAO,GAAC,IAAI,CAACX,WAAW,CAACY,aAAa,EAAE;IAC7C,IAAG,IAAI,CAACD,OAAO,EAAC;MACd,IAAI,CAACT,MAAM,CAACW,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MACjC,IAAI,CAACC,eAAe,GAAC,IAAI,CAACd,WAAW,CAACe,WAAW;;IAEnD,IAAG,IAAI,CAACf,WAAW,CAACgB,UAAU,EAAE,EAAC;MAC/B,IAAI,CAACC,OAAO,GAAC,IAAI,CAACjB,WAAW,CAACgB,UAAU,EAAE;;IAE5CE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,WAAW,CAACS,KAAK,CAAC,IAAI,CAACH,UAAU,CAACI,KAAK,CAAC,CAAC;IAC1DQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,UAAU,CAACI,KAAK,CAAC;IAClCQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,WAAW,CAACY,aAAa,EAAE,CAAC;IAC7CM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,WAAW,CAACgB,UAAU,EAAE,CAAC;EAC5C;EAAC;qBA1BUlB,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAsB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCT3B3B,8BAAwB;QAEEA,0CAA0B;QAAAA,iBAAK;QACvDA,+BAAuD;QAAxBA;UAAA,OAAY4B,cAAU;QAAA,EAAC;QACpD5B,+DAAwF;QACxFA,8BAAwB;QACAA,wBAAQ;QAAAA,iBAAQ;QACtCA,2BAAiF;QAEnFA,iBAAM;QACNA,+BAAwB;QACAA,yBAAQ;QAAAA,iBAAQ;QACtCA,4BAAqF;QACvFA,iBAAM;QACNA,mCAAwD;QAAAA,wBAAO;QAAAA,iBAAS;QAM5EA,gCAAqC;QAAAA,mDAAkC;QAAAA,8BAAwB;QAAAA,wBAAO;QAAAA,iBAAI;QAACA,2BAAS;QAAAA,iBAAM;;;QAjBlHA,eAAwB;QAAxBA,0CAAwB;QACtBA,eAAc;QAAdA,mCAAc","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","authService","route","router","username","required","password","signInForm","get","onSignIn","login","value","isValid","getIsLoggedIn","navigate","currentUsername","currentUser","getIsAdmin","isAdmin","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Facultate\\Internship\\Week2-Angular\\Ex2-MovieApp\\src\\app\\components\\login\\login.component.ts","C:\\Facultate\\Internship\\Week2-Angular\\Ex2-MovieApp\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private authService:AuthService,\n    private route:ActivatedRoute,\n    private router:Router){}\n  signInForm=new FormGroup({\n    username: new FormControl('',Validators.required),\n    password: new FormControl('', Validators.required)\n  })\n\n  isValid=true;\n  isAdmin=false;\n  currentUsername:string='';\n  onSignIn(){\n    this.authService.login(this.signInForm.value);\n    this.isValid=this.authService.getIsLoggedIn();\n    if(this.isValid){\n      this.router.navigate([\"/movies\"]);\n      this.currentUsername=this.authService.currentUser;\n    }\n    if(this.authService.getIsAdmin()){\n      this.isAdmin=this.authService.getIsAdmin();\n    }\n    console.log(this.authService.login(this.signInForm.value));\n    console.log(this.signInForm.value);\n    console.log(this.authService.getIsLoggedIn());\n    console.log(this.authService.getIsAdmin());\n  }\n\n    username= this.signInForm.get('username');\n\n}\n","\n<div class=\"container\" >\n  <div class=\"box btn btn-primary mb-3\" >\n  <h1 class=\"text-center\">Please login to get acces.</h1>\n  <form [formGroup]=\"signInForm\" (ngSubmit)=\"onSignIn()\">\n    <div *ngIf=\"!isValid\" class=\"alert alert-danger\">Invalid username and/or password!</div>\n    <div class=\"form-group\">\n      <label for=\"username\">Username</label>\n      <input type=\"text\" class=\"form-control\" id=\"username\" formControlName=\"username\">\n\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary float-end\">Sign In</button>\n  </form>\n</div>\n\n\n</div>\n<div class=\"container messagebottom\">You don't have an account? Please <a href=\"/sign-up-form\">Sign Up</a> for free.</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}