{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./rating.service\";\nexport class MovieService {\n  constructor(ratingService) {\n    this.ratingService = ratingService;\n    this.movies = [{\n      Title: \"Guardians of the Galaxy Vol. 2\",\n      Year: \"2017\",\n      Runtime: \"136 min\",\n      Genre: \"Action, Adventure, Comedy\",\n      Actors: \"Chris Pratt, Zoe Saldana, Dave Bautista\",\n      Plot: \"The Guardians struggle to keep together as a team while dealing with their personal family issues, notably Star-Lord's encounter with his father, the ambitious celestial being Ego.\",\n      Poster: \"https://m.media-amazon.com/images/M/MV5BNjM0NTc0NzItM2FlYS00YzEwLWE0YmUtNTA2ZWIzODc2OTgxXkEyXkFqcGdeQXVyNTgwNzIyNzg@._V1_SX300.jpg\",\n      Rating: [9.0],\n      isVoting: false\n    }, {\n      Title: \"The Nun\",\n      Year: \"2018\",\n      Runtime: \"96 min\",\n      Genre: \"Horror, Mystery, Thriller\",\n      Actors: \"Demián Bichir, Taissa Farmiga, Jonas Bloquet\",\n      Plot: \"A priest with a haunted past and a novice on the threshold of her final vows are sent by the Vatican to investigate the death of a young nun in Romania and confront a malevolent force in the form of a demonic nun.\",\n      Poster: \"https://m.media-amazon.com/images/M/MV5BMjM3NzQ5NDcxOF5BMl5BanBnXkFtZTgwNzM4MTQ5NTM@._V1_SX300.jpg\",\n      Rating: [8.0],\n      isVoting: false\n    }, {\n      Title: \"Cast Away\",\n      Year: \"2000\",\n      Runtime: \"143 min\",\n      Genre: \"Adventure, Drama, Romance\",\n      Actors: \"Tom Hanks, Helen Hunt, Paul Sanchez\",\n      Plot: \"A FedEx executive undergoes a physical and emotional transformation after crash landing on a deserted island.\",\n      Poster: \"https://m.media-amazon.com/images/M/MV5BN2Y5ZTU4YjctMDRmMC00MTg4LWE1M2MtMjk4MzVmOTE4YjkzXkEyXkFqcGdeQXVyNTc1NTQxODI@._V1_SX300.jpg\",\n      Rating: [8.5],\n      isVoting: false\n    }];\n    localStorage[\"movies\"] = JSON.stringify(this.movies);\n  }\n  ngOnInit() {}\n  getMovies() {\n    let moviesDb = localStorage.getItem(\"movies\");\n    if (moviesDb != null) {\n      this.movies = JSON.parse(moviesDb);\n    } else {\n      moviesDb = '';\n      this.movies = JSON.parse(moviesDb);\n    }\n    this.movies.forEach(element => {\n      element.AverageRating = this.getAverageRating(element);\n    });\n    return this.movies;\n  }\n  addMovie(movie) {\n    let moviesDb = localStorage.getItem(\"movies\");\n    if (moviesDb != null) {\n      this.movies = JSON.parse(moviesDb);\n    } else {\n      moviesDb = '';\n      this.movies = JSON.parse(moviesDb);\n    }\n    this.movies.push(movie);\n    localStorage.setItem(\"movies\", JSON.stringify(this.movies));\n  }\n  getAverageRating(movie) {\n    let total = 0;\n    let average = 0;\n    if (movie.Rating != undefined) {\n      movie.Rating.forEach(element => {\n        total += element;\n      });\n      average = total / movie.Rating.length;\n    }\n    ;\n    return average;\n  }\n  updateLocalStorage(movie) {\n    this.movies = this.getMovies();\n    let index = this.movies.findIndex(obj => obj.Title == movie.Title);\n    this.movies[index] = movie;\n    localStorage.setItem(\"movies\", JSON.stringify(this.movies));\n  }\n  addRating(movie) {\n    movie.Rating.push(this.ratingService.rateTheMovie() * 2);\n    movie.AverageRating = this.getAverageRating(movie);\n    this.updateLocalStorage(movie);\n    return movie;\n  }\n  deleteMovie(movie) {\n    let moviesDb = localStorage.getItem(\"movies\");\n    if (moviesDb != null) {\n      this.movies = JSON.parse(moviesDb);\n    } else {\n      moviesDb = '';\n      this.movies = JSON.parse(moviesDb);\n    }\n    this.movies = this.movies.filter(obj => obj.Title != movie.Title);\n    localStorage.setItem(\"movies\", JSON.stringify(this.movies));\n    return this.movies;\n  }\n  static #_ = this.ɵfac = function MovieService_Factory(t) {\n    return new (t || MovieService)(i0.ɵɵinject(i1.RatingService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MovieService,\n    factory: MovieService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"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","names":["MovieService","constructor","ratingService","Title","Year","Runtime","Genre","Actors","Plot","Poster","Rating","isVoting","localStorage","JSON","stringify","movies","ngOnInit","getMovies","moviesDb","getItem","parse","forEach","element","AverageRating","getAverageRating","addMovie","movie","push","setItem","total","average","undefined","length","updateLocalStorage","index","findIndex","obj","addRating","rateTheMovie","deleteMovie","filter","factory","providedIn"],"sourceRoot":"","sources":["C:\\Facultate\\Internship\\Week2-Angular\\Ex2-MovieApp\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { movie } from '../models/movie';\nimport { RatingService } from './rating.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n  constructor(private ratingService:RatingService) {\n\n    localStorage[\"movies\"] = JSON.stringify(this.movies);\n\n\n\n  }\n  ngOnInit(): void {\n\n\n  }\n  movies: movie[] = [\n    {\n      Title: \"Guardians of the Galaxy Vol. 2\",\n      Year: \"2017\",\n      Runtime: \"136 min\",\n      Genre: \"Action, Adventure, Comedy\",\n      Actors: \"Chris Pratt, Zoe Saldana, Dave Bautista\",\n      Plot: \"The Guardians struggle to keep together as a team while dealing with their personal family issues, notably Star-Lord's encounter with his father, the ambitious celestial being Ego.\",\n      Poster: \"https://m.media-amazon.com/images/M/MV5BNjM0NTc0NzItM2FlYS00YzEwLWE0YmUtNTA2ZWIzODc2OTgxXkEyXkFqcGdeQXVyNTgwNzIyNzg@._V1_SX300.jpg\",\n      Rating: [9.0],\n      isVoting:false\n    },\n    {\n      Title: \"The Nun\",\n      Year: \"2018\",\n      Runtime: \"96 min\",\n      Genre: \"Horror, Mystery, Thriller\",\n      Actors: \"Demián Bichir, Taissa Farmiga, Jonas Bloquet\",\n      Plot: \"A priest with a haunted past and a novice on the threshold of her final vows are sent by the Vatican to investigate the death of a young nun in Romania and confront a malevolent force in the form of a demonic nun.\",\n      Poster: \"https://m.media-amazon.com/images/M/MV5BMjM3NzQ5NDcxOF5BMl5BanBnXkFtZTgwNzM4MTQ5NTM@._V1_SX300.jpg\",\n      Rating: [8.0],\n      isVoting:false\n    },\n    {\n      Title: \"Cast Away\",\n      Year: \"2000\",\n      Runtime: \"143 min\",\n      Genre: \"Adventure, Drama, Romance\",\n      Actors: \"Tom Hanks, Helen Hunt, Paul Sanchez\",\n      Plot: \"A FedEx executive undergoes a physical and emotional transformation after crash landing on a deserted island.\",\n      Poster: \"https://m.media-amazon.com/images/M/MV5BN2Y5ZTU4YjctMDRmMC00MTg4LWE1M2MtMjk4MzVmOTE4YjkzXkEyXkFqcGdeQXVyNTc1NTQxODI@._V1_SX300.jpg\",\n      Rating: [8.5],\n      isVoting:false\n    }\n  ]\n\n  getMovies(): any[] {\n    let moviesDb = localStorage.getItem(\"movies\");\n    if (moviesDb != null) {\n      this.movies = JSON.parse(moviesDb);\n    } else {\n      moviesDb = '';\n      this.movies = JSON.parse(moviesDb);\n    }\n    this.movies.forEach(element => {\n      element.AverageRating=this.getAverageRating(element);\n    });\n    return this.movies;\n  }\n  addMovie(movie: movie): void {\n    let moviesDb = localStorage.getItem(\"movies\");\n    if (moviesDb != null) {\n      this.movies = JSON.parse(moviesDb);\n    } else {\n      moviesDb = '';\n      this.movies = JSON.parse(moviesDb);\n    }\n\n    this.movies.push(movie);\n    localStorage.setItem(\"movies\", JSON.stringify(this.movies));\n\n  }\n\n  getAverageRating(movie:movie){\n    let total=0;\n    let average=0;\n    if(movie.Rating!=undefined){\n      movie.Rating.forEach(element => {\n        total+=element\n    })\n    average=total/movie.Rating.length;\n    };\n\n    return average;\n  }\nupdateLocalStorage(movie:movie){\n  this.movies=this.getMovies();\n  let index=this.movies.findIndex(obj=>obj.Title==movie.Title);\n  this.movies[index]=movie;\n  localStorage.setItem(\"movies\", JSON.stringify(this.movies));\n}\naddRating(movie:movie){\n  movie.Rating.push(this.ratingService.rateTheMovie()*2);\n\n  movie.AverageRating=this.getAverageRating(movie);\nthis.updateLocalStorage(movie);\n\nreturn movie;\n\n}\n  deleteMovie(movie: movie) {\n    let moviesDb = localStorage.getItem(\"movies\");\n    if (moviesDb != null) {\n      this.movies = JSON.parse(moviesDb);\n    } else {\n      moviesDb = '';\n      this.movies = JSON.parse(moviesDb);\n    }\n    this.movies = this.movies.filter(obj => obj.Title != movie.Title);\n    localStorage.setItem(\"movies\", JSON.stringify(this.movies));\n    return this.movies;\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}