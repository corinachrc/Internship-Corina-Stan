{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(authService, route) {\n    this.authService = authService;\n    this.route = route;\n    this.signInForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  onSignIn() {\n    this.authService.login(this.signInForm.value);\n    console.log(this.authService.login(this.signInForm.value));\n    console.log(this.signInForm.value);\n    console.log(this.authService.getIsLoggedIn());\n    console.log(this.authService.getIsAdmin());\n  }\n  get username() {\n    return this.signInForm.get('username');\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 2,\n    vars: 0,\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"login works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;AASnE,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,WAAuB,EACjCC,KAAoB;IADV,gBAAW,GAAXD,WAAW;IACrB,UAAK,GAALC,KAAK;IACf,eAAU,GAAC,IAAIL,SAAS,CAAC;MACvBM,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAACE,UAAU,CAACM,QAAQ,CAAC;MACjDC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ;KAClD,CAAC;EAJ8B;EAMhCE,QAAQ;IACN,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC,IAAI,CAACC,UAAU,CAACC,KAAK,CAAC;IAC7CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,WAAW,CAACM,KAAK,CAAC,IAAI,CAACC,UAAU,CAACC,KAAK,CAAC,CAAC;IAC1DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,UAAU,CAACC,KAAK,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,WAAW,CAACW,aAAa,EAAE,CAAC;IAC7CF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,WAAW,CAACY,UAAU,EAAE,CAAC;EAC5C;EACA,IAAIV,QAAQ;IACV,OAAO,IAAI,CAACK,UAAU,CAACM,GAAG,CAAC,UAAU,CAAC;EACxC;EAAC;qBAjBUf,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAgB;IAAAC;IAAAC;IAAAC;MAAA;QCV3BC,yBAAG;QAAAA,4BAAY;QAAAA,iBAAI","names":["FormControl","FormGroup","Validators","LoginComponent","constructor","authService","route","username","required","password","onSignIn","login","signInForm","value","console","log","getIsLoggedIn","getIsAdmin","get","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Facultate\\Internship\\Week2-Angular\\Ex2-MovieApp\\src\\app\\components\\login\\login.component.ts","C:\\Facultate\\Internship\\Week2-Angular\\Ex2-MovieApp\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private authService:AuthService,\n    private route:ActivatedRoute){}\n  signInForm=new FormGroup({\n    username: new FormControl('',Validators.required),\n    password: new FormControl('', Validators.required)\n  })\n\n  onSignIn(){\n    this.authService.login(this.signInForm.value);\n    console.log(this.authService.login(this.signInForm.value));\n    console.log(this.signInForm.value);\n    console.log(this.authService.getIsLoggedIn());\n    console.log(this.authService.getIsAdmin());\n  }\n  get username(){\n    return this.signInForm.get('username');\n  }\n}\n","<p>login works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}